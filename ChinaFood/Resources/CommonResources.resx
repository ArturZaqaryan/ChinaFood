<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="FavoriteDishes" xml:space="preserve">
    <value>Favorite Dishes</value>
  </data>
  <data name="HotDishes" xml:space="preserve">
    <value>Hot Dishes</value>
  </data>
  <data name="ChineseDishes" xml:space="preserve">
    <value>Chinese Dishes</value>
  </data>
  <data name="JapaneseDishes" xml:space="preserve">
    <value>Japanese Dishes</value>
  </data>
  <data name="Drinks" xml:space="preserve">
    <value>Drinks</value>
  </data>
  <data name="PosterTitle1" xml:space="preserve">
    <value>Taste of China:</value>
  </data>
  <data name="PosterTitle2" xml:space="preserve">
    <value>Fast delivery of authentic Chinese dishes</value>
  </data>
  <data name="CompName" xml:space="preserve">
    <value>China Town</value>
  </data>
  <data name="ChinaTownTitle" xml:space="preserve">
    <value>Online platform for ordering eastern food</value>
  </data>
  <data name="ChinaTownDesc" xml:space="preserve">
    <value>China Town– Armenian online service for ordering eastern food. You will enjoy our website if you value your time, money and ability of choice. You can easily find the dish you want in a few seconds. Among assortment offered: chinesse food, japannesse food, various drinks. Discover the authentic flavors of Chinese cuisine with our convenient delivery service! We offer a wide selection of dishes prepared using traditional recipes and fresh ingredients. Our menu includes everything from spicy noodles and rice to delicious dim sum, juicy Peking duck, and flavorful soups. We pride ourselves on fast delivery and guarantee that each portion retains its taste and aroma until it reaches your table. Our easy-to-use online ordering system allows you to choose your favorite dishes and enjoy the richness of Eastern cuisine without leaving your home. Order now and dive into the world of Chinese culinary traditions!</value>
  </data>
  <data name="FastAndConvenientDeliveryTitle" xml:space="preserve">
    <value>Fast and convenient delivery</value>
  </data>
  <data name="FastAndConvenientDeliveryDesc" xml:space="preserve">
    <value>Customers can order their favorite Chinese dishes online and have them delivered to their doorstep, saving time and making the process as convenient as possible.</value>
  </data>
  <data name="WideSelectionOfTraditionalDishesTitle" xml:space="preserve">
    <value>Wide selection of traditional dishes</value>
  </data>
  <data name="WideSelectionOfTraditionalDishesDesc" xml:space="preserve">
    <value>The menu offers a variety of popular Chinese dishes, from dim sum to Peking duck, satisfying the tastes of a diverse range of customers.</value>
  </data>
  <data name="FreshIngredientsAndAuthenticRecipesTitle" xml:space="preserve">
    <value>Fresh ingredients and authentic recipes</value>
  </data>
  <data name="FreshIngredientsAndAuthenticRecipesDesc" xml:space="preserve">
    <value>All dishes are made with fresh ingredients using traditional Chinese recipes, ensuring genuine flavors and high-quality meals.</value>
  </data>
  <data name="EasyOrderingProcessTitle" xml:space="preserve">
    <value>Easy ordering process</value>
  </data>
  <data name="EasyOrderingProcessDesc" xml:space="preserve">
    <value>The website’s user interface is designed for simplicity, allowing customers to easily find their desired dishes, add them to the cart, and place their orders in just a few clicks.</value>
  </data>
  <data name="SpecialOffersAndDiscountsTitle" xml:space="preserve">
    <value>Special offers and discounts</value>
  </data>
  <data name="SpecialOffersAndDiscountsDesc" xml:space="preserve">
    <value>Regular promotions, discounts for large orders, or loyalty programs for returning customers increase the appeal of the service.</value>
  </data>
  <data name="CustomerSupportAndQualityAssuranceTitle" xml:space="preserve">
    <value>Customer Support and Quality Assurance</value>
  </data>
  <data name="CustomerSupportAndQualityAssuranceDesc" xml:space="preserve">
    <value>Our website provides responsive customer support to handle any questions or concerns. We guarantee the quality of our food, and any complaints will be addressed quickly, ensuring customer trust and satisfaction.</value>
  </data>
</root>