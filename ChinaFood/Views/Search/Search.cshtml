@using ChinaFood.Domain.Entities
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<CommonResources> SharedLocalizer
@model Dictionary<DishType, Dictionary<SubCategoryModel, List<DishModel>>>
@{
    Layout = "Layouts/_LayoutWithoutPoster";
}
<div class="content">
    <div class="container search-results">
    <h2 class="title">@SharedLocalizer["SearchResults"]</h2>
    <div class="content__column">
            @foreach (var dishPair in Model)
            {
                <article class="article">
                    <div class="article__title title">
                        <h3>
                            <a href="/Search/Search?destination=&dishType=@dishPair.Key&minPrice=&maxPrice=">
                                    @{
                                    switch (dishPair.Key)
                                    {
                                        case DishType.China:
                                                @SharedLocalizer["ChineseDishes"]
                                            break;
                                        case DishType.Japan:
                                            @SharedLocalizer["JapaneseDishes"]
                                            break;
                                        case DishType.Drink:
                                            @SharedLocalizer["Drinks"]
                                            break;
                                    }  
                                }
                            </a>
                        </h3>
                    </div>

                    @foreach (var subCategoryPair in dishPair.Value)
                    {
                        <div class="article__title title_left">
                            <a href="/Search/Search?destination=&dishType=@dishPair.Key&SubCategoryId=@subCategoryPair.Key.Id">@subCategoryPair.Key.Title</a>
                        </div>
                        @await Html.PartialAsync("PageBlocks/CardBlockPartial", subCategoryPair.Value)
                    }
                </article>
            }
    </div>
</div>
</div>
